{"is_source_file": true, "format": "TypeScript", "description": "This file defines functions to manage a notes database using SQLite, including initializing the database, creating, retrieving, updating, and deleting notes.", "external_files": ["expo-sqlite"], "external_methods": ["SQLite.openDatabaseAsync", "db.execAsync", "db.getAllAsync", "db.getFirstAsync", "db.runAsync"], "published": ["initDB", "getNotes", "getNoteById", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "export async function initDB(): Promise<void> { initDB", "description": "Initializes the database and creates the notes table if it does not exist.", "scope": "", "scopeKind": ""}, {"name": "export async function getNotes(): Promise<Note[]> { getNotes", "description": "Retrieves all notes ordered by updated_at in descending order.", "scope": "", "scopeKind": ""}, {"name": "export async function getNoteById(id: number): Promise<Note | null> { getNoteById", "description": "Fetches a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(note: Omit<Note, 'id' | 'created_at' | 'updated_at'>): Promise</ createNote", "description": "Inserts a new note into the database and returns its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: number, data: Partial<Pick<Note, 'title' | 'content'>>): Pr/ updateNote", "description": "Updates the title and content of an existing note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: number): Promise<void> { deleteNote", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}], "calls": ["SQLite.openDatabaseAsync", "db.execAsync", "db.getAllAsync", "db.getFirstAsync", "db.runAsync", "getNoteById"], "search-terms": ["database", "notes", "SQLite", "Expo SQLite", "notes table", "initDB", "CRUD notes"], "state": 2, "file_id": 8, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "contentSet", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const contentSet = data.content ?? (await getNoteById(id))?.content ?? '';$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function createNote(note: Omit<Note, 'id' | 'created_at' | 'updated_at'>): Promise</", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^let db: SQLite.SQLiteDatabase | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function deleteNote(id: number): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function getNoteById(id: number): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function getNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "initDB", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function initDB(): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const result = await db!.runAsync($/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "row", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const row = await db!.getFirstAsync<Note>('SELECT * FROM notes WHERE id = ?;', [id]);$/", "language": "TypeScript", "kind": "constant", "scope": "getNoteById", "scopeKind": "function"}, {"_type": "tag", "name": "rows", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const rows = await db!.getAllAsync<Note>('SELECT * FROM notes ORDER BY updated_at DESC;');$/", "language": "TypeScript", "kind": "constant", "scope": "getNotes", "scopeKind": "function"}, {"_type": "tag", "name": "titleSet", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const titleSet = data.title ?? (await getNoteById(id))?.title ?? '';$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function updateNote(id: number, data: Partial<Pick<Note, 'title' | 'content'>>): Pr/", "language": "TypeScript", "kind": "function"}], "hash": "4693d08f7c4995a0b38bb256f53e9a94", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/db/database.ts", "fields": [{"name": "let db: SQLite.SQLiteDatabase | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18": ""}]}