{"is_source_file": true, "format": "TypeScript", "description": "This file defines a database interface module for a notes application, supporting both native (expo-sqlite) and web (in-memory store) environments. It includes type definitions for notes and functions for initializing the database, CRUD operations, and platform detection.", "external_files": ["react-native", "expo-sqlite"], "external_methods": ["Platform.OS", "SQLite.openDatabaseAsync", "db.execAsync", "db.getAllAsync", "db.getFirstAsync", "db.runAsync"], "published": ["initDB", "getNotes", "getNoteById", "createNote", "updateNote", "deleteNote", "Note"], "classes": [], "methods": [{"name": "export async function initDB(): Promise<void> { initDB", "description": "Initializes the database or memory store depending on platform.", "scope": "", "scopeKind": ""}, {"name": "export async function getNotes(): Promise<Note[]> { getNotes", "description": "Retrieves all notes ordered by last updated date.", "scope": "", "scopeKind": ""}, {"name": "export async function getNoteById(id: number): Promise<Note | null> { getNoteById", "description": "Fetches a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(note: Omit<Note, 'id' | 'created_at' | 'updated_at'>): Promise</ createNote", "description": "Creates a new note entry and returns its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: number, data: Partial<Pick<Note, 'title' | 'content'>>): Pr/ updateNote", "description": "Updates an existing note's title and/or content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: number): Promise<void> { deleteNote", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "function isWeb(): boolean { isWeb", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Platform.OS", "SQLite.openDatabaseAsync", "db.execAsync", "db.getAllAsync", "db.getFirstAsync", "db.runAsync", "getNoteById"], "search-terms": ["expo-sqlite", "notes database", "platform detection", "web fallback", "TypeScript notes interface"], "state": 2, "file_id": 8, "knowledge_revision": 64, "git_revision": "3ea8e52f6319bf6b88141f40068ad546fc05df0b", "revision_history": [{"18": ""}, {"64": "3ea8e52f6319bf6b88141f40068ad546fc05df0b"}], "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const created: Note = { id: memId++, title: note.title, content: note.content, created_at: n/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "contentSet", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const contentSet = data.content ?? (await getNoteById(id))?.content ?? '';$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function createNote(note: Omit<Note, 'id' | 'created_at' | 'updated_at'>): Promise</", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const created: Note = { id: memId++, title: note.title, content: note.content, created_at: n/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const created: Note = { id: memId++, title: note.title, content: note.content, created_at: n/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^      const current = memoryStore[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^let db: SQLite.SQLiteDatabase | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function deleteNote(id: number): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function getNoteById(id: number): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function getNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^      const current = memoryStore[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const idx = memoryStore.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const idx = memoryStore.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "initDB", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function initDB(): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isWeb", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^function isWeb(): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "memId", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^let memId = 1;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "memoryStore", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^const memoryStore: Note[] = [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const result = await db!.runAsync($/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "row", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const row = await db!.getFirstAsync<Note>('SELECT * FROM notes WHERE id = ?;', [id]);$/", "language": "TypeScript", "kind": "constant", "scope": "getNoteById", "scopeKind": "function"}, {"_type": "tag", "name": "rows", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const rows = await db!.getAllAsync<Note>('SELECT * FROM notes ORDER BY updated_at DESC;');$/", "language": "TypeScript", "kind": "constant", "scope": "getNotes", "scopeKind": "function"}, {"_type": "tag", "name": "titleSet", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^  const titleSet = data.title ?? (await getNoteById(id))?.title ?? '';$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^export async function updateNote(id: number, data: Partial<Pick<Note, 'title' | 'content'>>): Pr/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-178727-178736/notes_frontend/src/db/database.ts", "pattern": "/^    const created: Note = { id: memId++, title: note.title, content: note.content, created_at: n/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}], "hash": "a6ae710cc42fc1cba133e28199453c49", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/db/database.ts", "fields": [{"name": "let db: SQLite.SQLiteDatabase | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let memId = 1;", "scope": "", "scopeKind": "", "description": "unavailable"}]}